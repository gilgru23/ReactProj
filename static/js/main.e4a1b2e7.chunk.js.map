{"version":3,"sources":["apis/streams.js","history.js","actions/index.js","actions/types.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","createBrowserHistory","fetchStream","id","dispatch","a","streams","get","response","type","payload","data","StreamForm","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","connect","getState","userId","auth","post","history","push","StreamEdit","editStream","match","params","stream","initialValues","_","pick","state","ownProps","patch","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","StreamDelete","Fragment","deleteStream","to","renderContent","renderActions","delete","StreamList","fetchStreams","currentUserId","map","key","renderAdmin","isSignedIn","style","textAlign","renderList","renderCreate","Object","values","StreamShow","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","App","path","exact","INTIAL_STATE","combineReducers","action","formReducer","mapKeys","omit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.e4a1b2e7.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'http://localhost:3001'\r\n});\r\n","import { createBrowserHistory } from 'history';\r\nexport default createBrowserHistory();\r\n","import streams from '../apis/streams';\r\nimport history from '../history';\r\nimport {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  CREATE_STREAM,\r\n  FETCH_STREAMS,\r\n  FETCH_STREAM,\r\n  DELETE_STREAM,\r\n  EDIT_STREAM\r\n} from './types';\r\n\r\nexport const signIn = userId => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: userId\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT\r\n  };\r\n};\r\n\r\nexport const createStream = formValues => async (dispatch, getState) => {\r\n  const { userId } = getState().auth;\r\n  const response = await streams.post('/streams', { ...formValues, userId });\r\n\r\n  dispatch({ type: CREATE_STREAM, payload: response.data });\r\n  history.push('/');\r\n};\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n  const response = await streams.get('/streams');\r\n\r\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\r\n};\r\n\r\nexport const fetchStream = id => async dispatch => {\r\n  const response = await streams.get(`/streams/${id}`);\r\n\r\n  dispatch({ type: FETCH_STREAM, payload: response.data });\r\n};\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n  const response = await streams.patch(`/streams/${id}`, formValues);\r\n\r\n  dispatch({ type: EDIT_STREAM, payload: response.data });\r\n  history.push('/');\r\n};\r\n\r\nexport const deleteStream = id => async dispatch => {\r\n  await streams.delete(`/streams/${id}`);\r\n\r\n  dispatch({ type: DELETE_STREAM, payload: id });\r\n  history.push('/');\r\n};\r\n","export const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const CREATE_STREAM = 'CREATE_STREAM';\r\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\r\nexport const FETCH_STREAM = 'FETCH_STREAM';\r\nexport const DELETE_STREAM = 'DELETE_STREAM';\r\nexport const EDIT_STREAM = 'EDIT_STREAM';\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass StreamForm extends React.Component {\r\n  renderError({ error, touched }) {\r\n    if (touched && error) {\r\n      return (\r\n        <div className=\"ui error message\">\r\n          <div className=\"header\">{error}</div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderInput = ({ input, label, meta }) => {\r\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n    return (\r\n      <div className={className}>\r\n        <label>{label}</label>\r\n        <input {...input} autoComplete=\"off\" />\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onSubmit = formValues => {\r\n    this.props.onSubmit(formValues);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n        className=\"ui form error\"\r\n      >\r\n        <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\r\n        <Field\r\n          name=\"description\"\r\n          component={this.renderInput}\r\n          label=\"Enter Description\"\r\n        />\r\n        <button className=\"ui button primary\">Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = formValues => {\r\n  const errors = {};\r\n\r\n  if (!formValues.title) {\r\n    errors.title = 'You must enter a title';\r\n  }\r\n\r\n  if (!formValues.description) {\r\n    errors.description = 'You must enter a description';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default reduxForm({\r\n  form: 'streamForm',\r\n  validate\r\n})(StreamForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamCreate extends React.Component {\r\n  onSubmit = formValues => {\r\n    this.props.createStream(formValues);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Create a Stream</h3>\r\n        <StreamForm onSubmit={this.onSubmit} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { createStream }\r\n)(StreamCreate);\r\n","import _ from 'lodash';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream, editStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamEdit extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchStream(this.props.match.params.id);\r\n  }\r\n\r\n  onSubmit = formValues => {\r\n    this.props.editStream(this.props.match.params.id, formValues);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.stream) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>Edit a Stream</h3>\r\n        <StreamForm\r\n          initialValues={_.pick(this.props.stream, 'title', 'description')}\r\n          onSubmit={this.onSubmit}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { stream: state.streams[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchStream, editStream }\r\n)(StreamEdit);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Modal = props => {\r\n  return ReactDOM.createPortal(\r\n    <div onClick={props.onDismiss} className=\"ui dimmer modals visible active\">\r\n      <div\r\n        onClick={e => e.stopPropagation()}\r\n        className=\"ui standard modal visible active\"\r\n      >\r\n        <div className=\"header\">{props.title}</div>\r\n        <div className=\"content\">{props.content}</div>\r\n        <div className=\"actions\">{props.actions}</div>\r\n      </div>\r\n    </div>,\r\n    document.querySelector('#modal')\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from '../Modal';\r\nimport history from '../../history';\r\nimport { fetchStream, deleteStream } from '../../actions';\r\n\r\nclass StreamDelete extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchStream(this.props.match.params.id);\r\n  }\r\n\r\n  renderActions() {\r\n    const { id } = this.props.match.params;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <button\r\n          onClick={() => this.props.deleteStream(id)}\r\n          className=\"ui button negative\"\r\n        >\r\n          Delete\r\n        </button>\r\n        <Link to=\"/\" className=\"ui button\">\r\n          Cancel\r\n        </Link>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderContent() {\r\n    if (!this.props.stream) {\r\n      return 'Are you sure you want to delete this stream?';\r\n    }\r\n\r\n    return `Are you sure you want to delete the stream with title: ${\r\n      this.props.stream.title\r\n    }`;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        title=\"Delete Stream\"\r\n        content={this.renderContent()}\r\n        actions={this.renderActions()}\r\n        onDismiss={() => history.push('/')}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { stream: state.streams[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchStream, deleteStream }\r\n)(StreamDelete);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchStreams } from '../../actions';\r\n\r\nclass StreamList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchStreams();\r\n  }\r\n\r\n  renderAdmin(stream) {\r\n    if (stream.userId === this.props.currentUserId) {\r\n      return (\r\n        <div className=\"right floated content\">\r\n          <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\r\n            Edit\r\n          </Link>\r\n          <Link\r\n            to={`/streams/delete/${stream.id}`}\r\n            className=\"ui button negative\"\r\n          >\r\n            Delete\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderList() {\r\n    return this.props.streams.map(stream => {\r\n      return (\r\n        <div className=\"item\" key={stream.id}>\r\n          {this.renderAdmin(stream)}\r\n          <i className=\"large middle aligned icon camera\" />\r\n          <div className=\"content\">\r\n            {stream.title}\r\n            <div className=\"description\">{stream.description}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderCreate() {\r\n    if (this.props.isSignedIn) {\r\n      return (\r\n        <div style={{ textAlign: 'right' }}>\r\n          <Link to=\"/streams/new\" className=\"ui button primary\">\r\n            Create Stream\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Streams</h2>\r\n        <div className=\"ui celled list\">{this.renderList()}</div>\r\n        {this.renderCreate()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    streams: Object.values(state.streams),\r\n    currentUserId: state.auth.userId,\r\n    isSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchStreams }\r\n)(StreamList);\r\n","import React from 'react';\r\n\r\nconst StreamShow = () => {\r\n  return <div>StreamShow</div>;\r\n};\r\n\r\nexport default StreamShow;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../actions';\r\n\r\nclass GoogleAuth extends React.Component {\r\n  componentDidMount() {\r\n    window.gapi.load('client:auth2', () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            '797401886567-9cumct9mrt3v2va409rasa7fa6fq02hh.apps.googleusercontent.com',\r\n          scope: 'email'\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  onAuthChange = isSignedIn => {\r\n    if (isSignedIn) {\r\n      this.props.signIn(this.auth.currentUser.get().getId());\r\n    } else {\r\n      this.props.signOut();\r\n    }\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn();\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut();\r\n  };\r\n\r\n  renderAuthButton() {\r\n    if (this.props.isSignedIn === null) {\r\n      return null;\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\r\n          <i className=\"google icon\" />\r\n          Sign Out\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\r\n          <i className=\"google icon\" />\r\n          Sign In with Google\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderAuthButton()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { isSignedIn: state.auth.isSignedIn };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { signIn, signOut }\r\n)(GoogleAuth);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport GoogleAuth from './GoogleAuth';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"ui secondary pointing menu\">\r\n      <Link to=\"/\" className=\"item\">\r\n        Streamy\r\n      </Link>\r\n      <div className=\"right menu\">\r\n        <Link to=\"/\" className=\"item\">\r\n          All Streams\r\n        </Link>\r\n        <GoogleAuth />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Router, Route } from 'react-router-dom';\r\nimport StreamCreate from './streams/StreamCreate';\r\nimport StreamEdit from './streams/StreamEdit';\r\nimport StreamDelete from './streams/StreamDelete';\r\nimport StreamList from './streams/StreamList';\r\nimport StreamShow from './streams/StreamShow';\r\nimport Header from './Header';\r\nimport history from '../history';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <Router history={history}>\r\n        <div>\r\n          <Header />\r\n          <Route path=\"/\" exact component={StreamList} />\r\n          <Route path=\"/streams/new\" exact component={StreamCreate} />\r\n          <Route path=\"/streams/edit/:id\" exact component={StreamEdit} />\r\n          <Route path=\"/streams/delete/:id\" exact component={StreamDelete} />\r\n          <Route path=\"/streams/show\" exact component={StreamShow} />\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { SIGN_IN, SIGN_OUT } from '../actions/types';\r\n\r\nconst INTIAL_STATE = {\r\n  isSignedIn: null,\r\n  userId: null\r\n};\r\n\r\nexport default (state = INTIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return { ...state, isSignedIn: true, userId: action.payload };\r\n    case SIGN_OUT:\r\n      return { ...state, isSignedIn: false, userId: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport authReducer from './authReducer';\r\nimport streamReducer from './streamReducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  streams: streamReducer\r\n});\r\n","import _ from 'lodash';\r\nimport {\r\n  FETCH_STREAM,\r\n  FETCH_STREAMS,\r\n  CREATE_STREAM,\r\n  EDIT_STREAM,\r\n  DELETE_STREAM\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_STREAMS:\r\n      return { ...state, ..._.mapKeys(action.payload, 'id') };\r\n    case FETCH_STREAM:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case CREATE_STREAM:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case EDIT_STREAM:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case DELETE_STREAM:\r\n      return _.omit(state, action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}